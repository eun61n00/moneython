name: Deploy Backend to EC2

on:
    push:
        branches: ["main"]

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: ./backend

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            # - name: Run tests
            #   run: |
            #     ./gradlew :auth-service:test -Dspring.profiles.active=test
            #     ./gradlew :user-service:test -Dspring.profiles.active=test
            #     ./gradlew :quiz-service:test -Dspring.profiles.active=test
            #     ./gradlew :gateway:test -Dspring.profiles.active=test
            #     ./gradlew :config-server:test -Dspring.profiles.active=test

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to DockerHub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

            - name: Build and Push Docker Images
              run: |
                  export GIT_TAG=${{ github.sha }}
                  export DOCKER_USER=${{ secrets.DOCKER_HUB_USERNAME }}
                  docker compose -f docker-compose.yml build
                  docker compose -f docker-compose.yml push

            - name: Copy docker-compose.prod.yml to EC2
              run: |
                  echo "${{ secrets.EC2_KEY }}" > key.pem
                  chmod 600 key.pem
                  scp -i key.pem -o StrictHostKeyChecking=no docker-compose.prod.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/moneython/

            - name: Deploy to EC2
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ${{ secrets.EC2_USER }}
                  key: ${{ secrets.EC2_KEY }}
                  script: |
                      cd /home/ubuntu/moneython
                      export GIT_TAG=${{ github.sha }}
                      export DOCKER_USER=${{ secrets.DOCKER_HUB_USERNAME }}
                      export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
                      export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
                      echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
                      docker compose -f docker-compose.prod.yml down
                      docker compose -f docker-compose.prod.yml pull
                      docker compose -f docker-compose.prod.yml up -d --remove-orphans
