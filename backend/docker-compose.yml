services:
    eureka-server:
        build:
            context: .
            dockerfile: eureka-server/Dockerfile
        container_name: eureka-server
        image: ${DOCKER_USER:-eun61n}/moneython-eureka-server:${GIT_TAG:-latest}
        ports:
            - "8761:8761"
        networks:
            - moneython-networks
        healthcheck:
            test:
                [
                    "CMD",
                    "curl",
                    "-f",
                    "http://eureka-server:8761/actuator/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

    config-server:
        build:
            context: .
            dockerfile: config-server/Dockerfile
        container_name: config-server
        image: ${DOCKER_USER:-eun61n}/moneython-config-server:${GIT_TAG:-latest}
        ports:
            - "8888:8888"
        environment:
            - GIT_REPO=https://github.com/eun61n00/moneython
        networks:
            - moneython-networks
        depends_on:
            - eureka-server
        healthcheck:
            test:
                [
                    "CMD",
                    "curl",
                    "-f",
                    "http://config-server:8888/actuator/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

    auth-service:
        build:
            context: .
            dockerfile: auth-service/Dockerfile
        container_name: auth-service
        image: ${DOCKER_USER:-eun61n}/moneython-auth-service:${GIT_TAG:-latest}
        ports:
            - "8081:8081"
        networks:
            - moneython-networks
        depends_on:
            config-server:
                condition: service_healthy
            eureka-server:
                condition: service_healthy

    user-service:
        build:
            context: .
            dockerfile: user-service/Dockerfile
        container_name: user-service
        image: ${DOCKER_USER:-eun61n}/moneython-user-service:${GIT_TAG:-latest}
        ports:
            - "8082:8082"
        networks:
            - moneython-networks
        environment:
            - DB_USER=${POSTGRES_USER}
            - DB_PASSWORD=${POSTGRES_PASSWORD}
        depends_on:
            postgres-db:
                condition: service_healthy
            config-server:
                condition: service_healthy
            eureka-server:
                condition: service_healthy

    quiz-service:
        build:
            context: .
            dockerfile: quiz-service/Dockerfile
        container_name: quiz-service
        image: ${DOCKER_USER:-eun61n}/moneython-quiz-service:${GIT_TAG:-latest}
        ports:
            - "8083:8083"
        networks:
            - moneython-networks
        environment:
            - DB_USER=${POSTGRES_USER}
            - DB_PASSWORD=${POSTGRES_PASSWORD}
        depends_on:
            config-server:
                condition: service_healthy
            eureka-server:
                condition: service_healthy

    gateway:
        build:
            context: .
            dockerfile: gateway/Dockerfile
        container_name: gateway
        image: ${DOCKER_USER:-eun61n}/moneython-gateway:${GIT_TAG:-latest}
        ports:
            - "8080:8080"
        networks:
            - moneython-networks
        depends_on:
            config-server:
                condition: service_healthy
            eureka-server:
                condition: service_healthy
            auth-service:
                condition: service_started
            user-service:
                condition: service_started
            quiz-service:
                condition: service_started

    postgres-db:
        image: postgres:latest
        container_name: postgres-db
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        ports:
            - "5432:5432"
        volumes:
            - ./init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
            - postgres-data:/var/lib/postgresql/data
        networks:
            - moneython-networks
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
            interval: 10s
            timeout: 5s
            retries: 5

networks:
    moneython-networks:
        driver: bridge

volumes:
    postgres-data:
